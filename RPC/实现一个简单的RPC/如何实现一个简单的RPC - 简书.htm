<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0038)https://www.jianshu.com/p/5b90a4e70783 -->
<!DOCTYPE html><!--[if IE 6]><html class="ie lt-ie8"><![endif]--><!--[if IE 7]><html class="ie lt-ie8"><![endif]--><!--[if IE 8]><html class="ie ie8"><![endif]--><!--[if IE 9]><HTML 
class="ie ie9"><![endif]--><!--[if !IE]><!--> <html> <!--<![endif]--><HEAD>
<META charset="utf-8">
<META content="IE=Edge" http-equiv="X-UA-Compatible">
<META name="viewport" content="width=device-width, initial-scale=1.0,user-scalable=no"><!-- Start of Baidu Transcode -->
<META content="no-siteapp" http-equiv="Cache-Control">
<META content="no-transform" http-equiv="Cache-Control">
<META name="applicable-device" content="pc,mobile">
<META name="MobileOptimized" content="width">
<META name="HandheldFriendly" content="true">
<META name="mobile-agent" content="format=html5;url=https://www.jianshu.com/p/5b90a4e70783"><!-- End of Baidu Transcode -->
<META name="description" content="在如何给老婆解释什么是RPC中，我们讨论了RPC的实现思路。那么这一次，就让我们通过代码来实现一个简单的RPC吧！ RPC的实现原理 正如上一讲所说，RPC主要是为了解决的两个问题： 解决分布式系统中，服务之间的调用问题。 远程调用时，要能够像本地调用一样方便，让调用者感知不到远程调用的逻辑。 还是以计算器Calculator为例，如果实现类CalculatorImpl是放在本地的，那么直接...">
<META name="360-site-verification" content="604a14b53c6b871206001285921e81d8">
<META content="294ec9de89e7fadb" property="wb:webmaster">
<META content="104102651453316562112116375" property="qc:admins">
<META content="11635613706305617" property="qc:admins">
<META content="1163561616621163056375" property="qc:admins">
<META name="google-site-verification" content="cV4-qkUJZR6gmFeajx_UyPe47GW9vY6cnCrYtCHYNh4">
<META name="google-site-verification" content="HF7lfF8YEGs1qtCE-kPml8Z469e2RHhGajy6JPVy5XI">
<META content="format=html5; url=https://www.jianshu.com/p/5b90a4e70783" 
http-equiv="mobile-agent"><!-- Apple -->
<META name="apple-mobile-web-app-title" content="简书"><!--  Meta for Smart App Banner -->
<META name="apple-itunes-app" content="app-id=888237539, app-argument=jianshu://notes/27711273"><!-- End --><!--  Meta for Twitter Card -->
<META content="summary" property="twitter:card">
<META content="@jianshucom" property="twitter:site">
<META content="如何实现一个简单的RPC" property="twitter:title">
<META content="在如何给老婆解释什么是RPC中，我们讨论了RPC的实现思路。那么这一次，就让我们通过代码来实现一个简单的RPC吧！ RPC的实现原理 正如上一讲所说，RPC主要是为了解决的两..." 
property="twitter:description">
<META content="https://www.jianshu.com/p/5b90a4e70783" property="twitter:url"><!-- End --><!--  Meta for OpenGraph -->
<META content="865829053512461" property="fb:app_id">
<META content="简书" property="og:site_name">
<META content="如何实现一个简单的RPC" property="og:title">
<META content="article" property="og:type">
<META content="https://www.jianshu.com/p/5b90a4e70783" property="og:url">
<META content="在如何给老婆解释什么是RPC中，我们讨论了RPC的实现思路。那么这一次，就让我们通过代码来实现一个简单的RPC吧！ RPC的实现原理 正如上一讲所说，RPC主要是为了解决的两个问题： 解决分布式..." 
property="og:description"><!-- End --><!--  Meta for Facebook Applinks -->
<META content="jianshu://notes/27711273" property="al:ios:url">
<META content="888237539" property="al:ios:app_store_id">
<META content="简书" property="al:ios:app_name">
<META content="jianshu://notes/27711273" property="al:android:url">
<META content="com.jianshu.haruki" property="al:android:package">
<META content="简书" 
property="al:android:app_name"><!-- End --><TITLE>如何实现一个简单的RPC - 简书</TITLE>
<META name="csrf-param" content="authenticity_token">
<META name="csrf-token" content="ypCgazXJSihepZN5hY0So0YS3eyzOBOy6bz4q9SJjtG+H3KnkWFNFvBKYrGsqrk9/hj4pvHCTHJJlH9xtsgDeg=="><LINK 
rel="stylesheet" href="如何实现一个简单的RPC%20-%20简书_files/web-274d6a76417c1f7a7da5.css" 
media="all"><LINK rel="stylesheet" href="如何实现一个简单的RPC%20-%20简书_files/entry-aa75deb505b1b600256a.css" 
media="all"><LINK rel="shortcut icon" type="image/x-icon" href="//cdn2.jianshu.io/assets/favicons/favicon-e743bfb1821442341c3ab15bdbe804f7ad97676bd07a770ccc9483473aa76f06.ico"><LINK 
rel="apple-touch-icon-precomposed" href="//cdn2.jianshu.io/assets/apple-touch-icons/57-a6f1f1ee62ace44f6dc2f6a08575abd3c3b163288881c78dd8d75247682a4b27.png" 
sizes="57x57"><LINK rel="apple-touch-icon-precomposed" href="//cdn2.jianshu.io/assets/apple-touch-icons/72-fb9834bcfce738fd7b9c5e31363e79443e09a81a8e931170b58bc815387c1562.png" 
sizes="72x72"><LINK rel="apple-touch-icon-precomposed" href="//cdn2.jianshu.io/assets/apple-touch-icons/76-49d88e539ff2489475d603994988d871219141ecaa0b1a7a9a1914f4fe3182d6.png" 
sizes="76x76"><LINK rel="apple-touch-icon-precomposed" href="//cdn2.jianshu.io/assets/apple-touch-icons/114-24252fe693524ed3a9d0905e49bff3cbd0228f25a320aa09053c2ebb4955de97.png" 
sizes="114x114"><LINK rel="apple-touch-icon-precomposed" href="//cdn2.jianshu.io/assets/apple-touch-icons/120-1bb7371f5e87f93ce780a5f1a05ff1b176828ee0d1d130e768575918a2e05834.png" 
sizes="120x120"><LINK rel="apple-touch-icon-precomposed" href="//cdn2.jianshu.io/assets/apple-touch-icons/152-bf209460fc1c17bfd3e2b84c8e758bc11ca3e570fd411c3bbd84149b97453b99.png" 
sizes="152x152"><!-- Start of 访问统计 -->
<SCRIPT>
    var _hmt = _hmt || [];
    (function() {
      var hm = document.createElement("script");
      hm.src = "//hm.baidu.com/hm.js?0c0e9d9b1e7d617b3e6842e85b9fb068";
      var s = document.getElementsByTagName("script")[0];
      s.parentNode.insertBefore(hm, s);
    })();
  </SCRIPT>
<!-- End of 访问统计 --><!-- 只给10%的用户添加代码 --><!-- ###第四范式-智能推荐：代码直接复制 无需修改参数### --><!-- ###功能：上报内容并反馈用户行为### --><!--
    <script charset="utf-8" id="ParadigmSDKv3" src="https://nbrecsys.4paradigm.com/sdk/js/ParadigmSDK_v3.js">
    </script>
    <script>
      ParadigmSDKv3.init("5cc57c5e8add401aa5533ff26dde2532");
      ParadigmSDKv3.trackDetailPageShow(524);
    </script>
  -->
<META name="GENERATOR" content="MSHTML 9.00.8112.16553"></HEAD>
<BODY lang="zh-CN" class="reader-black-font"><!-- 全局顶部导航栏 --><NAV class="navbar navbar-default navbar-fixed-top" 
role="navigation">
<DIV class="width-limit"><!-- 左上方 Logo --><A class="logo" href="https://www.jianshu.com/"><IMG 
alt="Nav logo" src="如何实现一个简单的RPC%20-%20简书_files/nav-logo-4c7bbafe27adc892f3046e6978459bac.png"></A><!-- 右上角 --><!-- 未登录显示登录/注册/写文章 --><A 
class="btn write-btn" href="https://www.jianshu.com/writer#/" target="_blank"><I 
class="iconfont ic-write"></I>写文章</A><A id="sign_up" class="btn sign-up" href="https://www.jianshu.com/sign_up">注册</A><A 
id="sign_in" class="btn log-in" href="https://www.jianshu.com/sign_in">登录</A><!-- 如果用户登录，显示下拉菜单 -->
<DIV id="view-mode-ctrl"></DIV>
<DIV class="container">
<DIV class="navbar-header"><BUTTON aria-expanded="false" class="navbar-toggle collapsed" 
type="button" data-toggle="collapse" data-target="#menu"><SPAN 
class="icon-bar"></SPAN><SPAN class="icon-bar"></SPAN><SPAN 
class="icon-bar"></SPAN></BUTTON></DIV>
<DIV id="menu" class="collapse navbar-collapse">
<UL class="nav navbar-nav">
  <LI class="tab "><A href="https://www.jianshu.com/"><SPAN 
  class="menu-text">首页</SPAN><I class="iconfont ic-navigation-discover menu-icon"></I>
  </A></LI>
  <LI class="tab "><A id="web-nav-app-download-btn" class="app-download-btn" 
  href="https://www.jianshu.com/apps?utm_medium=desktop&amp;utm_source=navbar-apps"><SPAN 
  class="menu-text">下载App</SPAN><I class="iconfont ic-navigation-download menu-icon"></I></A></LI>
  <LI class="search">
  <FORM accept-charset="UTF-8" method="get" action="/search" 
  target="_blank"><INPUT name="utf8" value="✓" type="hidden"><INPUT id="q" 
  class="search-input" name="q" type="text" placeholder="搜索" 
  autocomplete="off"><A class="search-btn" href="javascript:void(null)"><I 
  class="iconfont ic-search"></I></A></FORM></LI></UL></DIV></DIV></DIV></NAV>
<DIV class="note">
<DIV id="note-fixed-ad-container">
<DIV id="fixed-ad-container">
<DIV id="write-notes-ad"></DIV>
<DIV id="youdao-fixed-ad"></DIV>
<DIV id="yuxi-fixed-ad"></DIV>
<DIV id="_so_pdsBy_0"></DIV></DIV></DIV>
<DIV class="post">
<DIV class="article">
<H1 class="title">如何实现一个简单的RPC</H1><!-- 作者区域 -->
<DIV class="author"><A class="avatar" href="https://www.jianshu.com/u/86696f09d988"><IMG 
alt="96" src="如何实现一个简单的RPC%20-%20简书_files/1a8f408c-896b-464d-a417-4cea04f9c2e9.png">
</A>
<DIV class="info"><SPAN class="name"><A href="https://www.jianshu.com/u/86696f09d988">柳树之</A></SPAN><IMG 
class="badge-icon" title="程序员优秀作者" alt="595a1b60 08f6 4beb 998f 2bf55e230555" 
src="如何实现一个简单的RPC%20-%20简书_files/595a1b60-08f6-4beb-998f-2bf55e230555" 
data-toggle="tooltip"><!-- 关注用户按钮 -->
<DIV data-author-follow-button="" 
props-data-classes="user-follow-button-header"></DIV><!-- 文章数据信息 -->
<DIV class="meta"><!-- 简书钻 --><SPAN class="jsd-meta"><I class="iconfont ic-paid1"></I> 
3.9                </SPAN><!-- 如果文章更新时间大于发布时间，那么使用 tooltip 显示更新时间 --><SPAN 
class="publish-time">2018.05.09 08:05</SPAN><SPAN class="wordage">字数 
2756</SPAN></DIV></DIV><!-- 如果是当前作者，加入编辑按钮 --></DIV><!-- 文章内容 -->
<DIV class="show-content" data-note-content="">
<DIV class="show-content-free">
<P>在<A href="https://www.jianshu.com/p/2accc2840a1b" 
target="_blank">如何给老婆解释什么是RPC</A>中，我们讨论了RPC的实现思路。<BR>
那么这一次，就让我们通过代码来实现一个简单的RPC吧！</P>
<H1>RPC的实现原理</H1>
<P>正如上一讲所说，RPC主要是为了解决的两个问题：</P>
<UL>
  <LI>解决分布式系统中，服务之间的调用问题。</LI>
  <LI>远程调用时，要能够像本地调用一样方便，让调用者感知不到远程调用的逻辑。</LI></UL>
<P>还是以计算器Calculator为例，如果实现类CalculatorImpl是放在本地的，那么直接调用即可：<BR></P>
<DIV class="image-package">
<DIV style="max-height: 540px; max-width: 540px;" class="image-container">
<DIV style="padding-bottom: 100%;" class="image-container-fill"></DIV>
<DIV class="image-view" data-height="540" data-width="540"><IMG 
data-original-filesize="10403" data-original-format="image/png" 
data-original-height="540" data-original-width="540" data-original-src="//upload-images.jianshu.io/upload_images/7143349-69563e8ebc25c77c.png"></DIV>
</DIV>
<DIV class="image-caption"></DIV></DIV>
<P></P>
<P>现在系统变成分布式了，CalculatorImpl和调用方不在同一个地址空间，那么就必须要进行远程过程调用：<BR></P>
<DIV class="image-package">
<DIV style="max-height: 473px; max-width: 700px;" class="image-container">
<DIV style="padding-bottom: 52.5%;" class="image-container-fill"></DIV>
<DIV class="image-view" data-height="473" data-width="901"><IMG 
data-original-filesize="13118" data-original-format="image/png" 
data-original-height="473" data-original-width="901" data-original-src="//upload-images.jianshu.io/upload_images/7143349-d5f7290907ce3cca.png"></DIV>
</DIV>
<DIV class="image-caption"></DIV></DIV>
<P></P>
<P>那么如何实现远程过程调用，也就是RPC呢，一个完整的RPC流程，可以用下面这张图来描述：<BR></P>
<DIV class="image-package">
<DIV style="max-height: 221px; max-width: 263px;" class="image-container">
<DIV style="padding-bottom: 84.03%;" class="image-container-fill"></DIV>
<DIV class="image-view" data-height="221" data-width="263"><IMG 
data-original-filesize="1418" data-original-format="image/png" 
data-original-height="221" data-original-width="263" data-original-src="//upload-images.jianshu.io/upload_images/7143349-a9db3c3c85194c6e.png"></DIV>
</DIV>
<DIV class="image-caption"></DIV></DIV>
<P></P>
<P>其中左边的Client，对应的就是前面的Service A，而右边的Server，对应的则是Service B。<BR>下面一步一步详细解释一下。</P>
<OL>
  <LI>Service A的应用层代码中，调用了Calculator的一个实现类的add方法，希望执行一个加法运算；</LI>
  <LI>这个Calculator实现类，内部并不是直接实现计算器的加减乘除逻辑，而是通过远程调用Service 
  B的RPC接口，来获取运算结果，因此称之为<STRONG>Stub</STRONG>；</LI>
  <LI>Stub怎么和Service 
  B建立远程通讯呢？这时候就要用到<STRONG>远程通讯工具</STRONG>了，也就是图中的<STRONG>Run-time 
  Library</STRONG>，这个工具将帮你实现远程通讯的功能，比如Java的<STRONG>Socket</STRONG>，就是这样一个库，当然，你也可以用基于Http协议的<STRONG>HttpClient</STRONG>，或者其他通讯工具类，都可以，<STRONG>RPC并没有规定说你要用何种协议进行通讯</STRONG>；</LI>
  <LI>Stub通过调用通讯工具提供的方法，和Service B建立起了通讯，然后将请求数据发给Service 
  B。需要注意的是，由于底层的网络通讯是基于<STRONG>二进制格式</STRONG>的，因此这里Stub传给通讯工具类的数据也必须是二进制，比如calculator.add(1,2)，你必须把参数值1和2放到一个Request对象里头（这个Request对象当然不只这些信息，还包括要调用哪个服务的哪个RPC接口等其他信息），然后<STRONG>序列化</STRONG>为二进制，再传给通讯工具类，这一点也将在下面的代码实现中体现；</LI>
  <LI>二进制的数据传到Service B这一边了，Service B当然也有自己的通讯工具，通过这个通讯工具接收二进制的请求；</LI>
  <LI>既然数据是二进制的，那么自然要进行<STRONG>反序列化</STRONG>了，将二进制的数据反序列化为请求对象，然后将这个请求对象交给Service 
  B的Stub处理；</LI>
  <LI>和之前的Service 
  A的Stub一样，这里的Stub也同样是个“假玩意”，它所负责的，只是去解析请求对象，知道调用方要调的是哪个RPC接口，传进来的参数又是什么，然后再把这些参数传给对应的RPC接口，也就是Calculator的实际实现类去执行。很明显，如果是Java，那这里肯定用到了<STRONG>反射</STRONG>。</LI>
  <LI>RPC接口执行完毕，返回执行结果，现在轮到Service B要把数据发给Service A了，怎么发？一样的道理，一样的流程，只是现在Service 
  B变成了Client，Service A变成了Server而已：Service B反序列化执行结果-&gt;传输给Service A-&gt;Service 
  A反序列化执行结果 -&gt; 将结果返回给Application，完毕。</LI></OL>
<P>理论的讲完了，是时候把理论变成实践了。</P>
<H1>把理论变成实践</H1>
<BLOCKQUOTE>
  <P>本文的示例代码，可到<A href="https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Fhzy38324%2Fsimple-rpc" 
  rel="nofollow" target="_blank">Github</A>下载。</P></BLOCKQUOTE>
<P>首先是Client端的应用层怎么发起RPC，ComsumerApp：</P><PRE><CODE class="java">public class ComsumerApp {
    public static void main(String[] args) {
        Calculator calculator = new CalculatorRemoteImpl();
        int result = calculator.add(1, 2);
    }
}
</CODE></PRE>
<P><STRONG>通过一个CalculatorRemoteImpl，我们把RPC的逻辑封装进去了，客户端调用时感知不到远程调用的麻烦</STRONG>。下面再来看看CalculatorRemoteImpl，代码有些多，但是其实就是把上面的2、3、4几个步骤用代码实现了而已，CalculatorRemoteImpl：</P><PRE><CODE class="java">public class CalculatorRemoteImpl implements Calculator {
    public int add(int a, int b) {
        List&lt;String&gt; addressList = lookupProviders("Calculator.add");
        String address = chooseTarget(addressList);
        try {
            Socket socket = new Socket(address, PORT);

            // 将请求序列化
            CalculateRpcRequest calculateRpcRequest = generateRequest(a, b);
            ObjectOutputStream objectOutputStream = new ObjectOutputStream(socket.getOutputStream());

            // 将请求发给服务提供方
            objectOutputStream.writeObject(calculateRpcRequest);

            // 将响应体反序列化
            ObjectInputStream objectInputStream = new ObjectInputStream(socket.getInputStream());
            Object response = objectInputStream.readObject();

            if (response instanceof Integer) {
                return (Integer) response;
            } else {
                throw new InternalError();
            }

        } catch (Exception e) {
            log.error("fail", e);
            throw new InternalError();
        }
    }
}
</CODE></PRE>
<P>add方法的前面两行，lookupProviders和chooseTarget，可能大家会觉得不明觉厉。</P>
<P>分布式应用下，一个服务可能有多个实例，比如Service 
B，可能有ip地址为198.168.1.11和198.168.1.13两个实例，lookupProviders，其实就是在寻找要调用的服务的实例列表。在分布式应用下，通常会有一个<STRONG>服务注册中心</STRONG>，来提供查询实例列表的功能。</P>
<P>查到实例列表之后要调用哪一个实例呢，只时候就需要chooseTarget了，其实内部就是一个<STRONG>负载均衡</STRONG>策略。</P>
<P>由于我们这里只是想实现一个简单的RPC，所以暂时不考虑服务注册中心和负载均衡，因此代码里写死了返回ip地址为127.0.0.1。</P>
<P>代码继续往下走，我们这里用到了Socket来进行远程通讯，同时利用<STRONG>ObjectOutputStream</STRONG>的writeObject和<STRONG>ObjectInputStream</STRONG>的readObject，来实现序列化和反序列化。</P>
<P>最后再来看看Server端的实现，和Client端非常类似，ProviderApp：</P><PRE><CODE class="java">public class ProviderApp {
    private Calculator calculator = new CalculatorImpl();

    public static void main(String[] args) throws IOException {
        new ProviderApp().run();
    }

    private void run() throws IOException {
        ServerSocket listener = new ServerSocket(9090);
        try {
            while (true) {
                Socket socket = listener.accept();
                try {
                    // 将请求反序列化
                    ObjectInputStream objectInputStream = new ObjectInputStream(socket.getInputStream());
                    Object object = objectInputStream.readObject();

                    log.info("request is {}", object);

                    // 调用服务
                    int result = 0;
                    if (object instanceof CalculateRpcRequest) {
                        CalculateRpcRequest calculateRpcRequest = (CalculateRpcRequest) object;
                        if ("add".equals(calculateRpcRequest.getMethod())) {
                            result = calculator.add(calculateRpcRequest.getA(), calculateRpcRequest.getB());
                        } else {
                            throw new UnsupportedOperationException();
                        }
                    }

                    // 返回结果
                    ObjectOutputStream objectOutputStream = new ObjectOutputStream(socket.getOutputStream());
                    objectOutputStream.writeObject(new Integer(result));
                } catch (Exception e) {
                    log.error("fail", e);
                } finally {
                    socket.close();
                }
            }
        } finally {
            listener.close();
        }
    }

}
</CODE></PRE>
<P>Server端主要是通过ServerSocket的accept方法，来接收Client端的请求，接着就是反序列化请求-&gt;执行-&gt;序列化执行结果，最后将二进制格式的执行结果返回给Client。</P>
<P><STRONG>就这样我们实现了一个简陋而又详细的RPC。</STRONG><BR>说它简陋，是因为这个实现确实比较挫，在下一小节会说它为什么挫。<BR>
说它详细，是因为它一步一步的演示了一个RPC的执行流程，方便大家了解RPC的内部机制。</P>
<H1>为什么说这个RPC实现很挫</H1>
<P>这个RPC实现只是为了给大家演示一下RPC的原理，要是想放到生产环境去用，那是绝对不行的。</P>
<P>1、缺乏通用性<BR>
我通过给Calculator接口写了一个CalculatorRemoteImpl，来实现计算器的远程调用，下一次要是有别的接口需要远程调用，是不是又得再写对应的远程调用实现类？这肯定是很不方便的。</P>
<P>那该如何解决呢？先来看看使用Dubbo时是如何实现RPC调用的：</P><PRE><CODE class="java">@Reference
private Calculator calculator;

...

calculator.add(1,2);

...

</CODE></PRE>
<P>Dubbo通过和Spring的集成，在Spring容器初始化的时候，如果扫描到对象加了@Reference注解，那么就给这个对象生成一个代理对象，这个代理对象会负责远程通讯，然后将代理对象放进容器中。所以代码运行期用到的calculator就是那个代理对象了。</P>
<P>我们可以先不和Spring集成，也就是先不采用依赖注入，但是我们要做到像Dubbo一样，无需自己手动写代理对象，怎么做呢？那自然是要求所有的远程调用都遵循一套模板，<STRONG>把远程调用的信息放到一个RpcRequest对象里面，发给Server端，Server端解析之后就知道你要调用的是哪个RPC接口、以及入参是什么类型、入参的值又是什么</STRONG>，就像Dubbo的RpcInvocation：</P><PRE><CODE class="java">public class RpcInvocation implements Invocation, Serializable {

    private static final long serialVersionUID = -4355285085441097045L;

    private String methodName;

    private Class&lt;?&gt;[] parameterTypes;

    private Object[] arguments;

    private Map&lt;String, String&gt; attachments;

    private transient Invoker&lt;?&gt; invoker;
</CODE></PRE>
<P>2、集成Spring<BR>
在实现了代理对象通用化之后，下一步就可以考虑集成Spring的IOC功能了，通过Spring来创建代理对象，这一点就需要对Spring的bean初始化有一定掌握了。</P>
<P>3、长连接or短连接<BR>
总不能每次要调用RPC接口时都去开启一个Socket建立连接吧？是不是可以保持若干个长连接，然后每次有rpc请求时，把请求放到任务队列中，然后由线程池去消费执行？只是一个思路，后续可以参考一下Dubbo是如何实现的。</P>
<P>4、 服务端线程池<BR>
我们现在的Server端，是单线程的，每次都要等一个请求处理完，才能去accept另一个socket的连接，这样性能肯定很差，是不是可以通过一个线程池，来实现同时处理多个RPC请求？同样只是一个思路。</P>
<P>5、服务注册中心<BR>
正如之前提到的，要调用服务，首先你需要一个服务注册中心，告诉你对方服务都有哪些实例。Dubbo的服务注册中心是可以配置的，官方推荐使用Zookeeper。如果使用Zookeeper的话，要怎样往上面注册实例，又要怎样获取实例，这些都是要实现的。</P>
<P>6、负载均衡<BR>
如何从多个实例里挑选一个出来，进行调用，这就要用到负载均衡了。负载均衡的策略肯定不只一种，要怎样把策略做成可配置的？又要如何实现这些策略？同样可以参考Dubbo，<A 
href="https://link.jianshu.com/?t=http%3A%2F%2Fdubbo.apache.org%2Fbooks%2Fdubbo-user-book%2Fdemos%2Floadbalance.html" 
rel="nofollow" target="_blank">Dubbo - 负载均衡</A></P>
<P>7、结果缓存<BR>每次调用查询接口时都要真的去Server端查询吗？是不是要考虑一下支持缓存？</P>
<P>8、多版本控制<BR>服务端接口修改了，旧的接口怎么办？</P>
<P>9、异步调用<BR>客户端调用完接口之后，不想等待服务端返回，想去干点别的事，可以支持不？</P>
<P>10、优雅停机<BR>服务端要停机了，还没处理完的请求，怎么办？</P>
<P>......</P>
<P>诸如此类的优化点还有很多，这也是为什么实现一个高性能高可用的RPC框架那么难的原因。</P>
<P>当然，我们现在已经有很多很不错的RPC框架可以参考了，我们完全可以借鉴一下前人的智慧。</P>
<P><STRONG>后面如果有（dian）机（zan）会（duo）的话</STRONG>，也将和大家分享一下如何一步一步优化现有的这块RPC代码，把它做成一个小型RPC框架！</P>
<H1>参考</H1>
<UL>
  <LI>一本很棒的分布式书籍：《大型网站系统与Java中间件实践》</LI>
  <LI><A href="https://link.jianshu.com/?t=http%3A%2F%2Fdubbo.apache.org%2Fbooks%2Fdubbo-user-book%2F" 
  rel="nofollow" target="_blank">Dubbo 使用文档</A></LI>
  <LI><A href="https://link.jianshu.com/?t=http%3A%2F%2Fdubbo.apache.org%2Fbooks%2Fdubbo-dev-book%2F" 
  rel="nofollow" target="_blank">Dubbo 源码开发手册</A></LI></UL></DIV></DIV></DIV><!-- 如果是付费文章，未购买，则显示购买按钮 --><!-- 连载目录项 --><!-- 如果是付费文章 --><!-- 如果是付费连载，已购买，且作者允许赞赏，则显示付费信息和赞赏 -->
<DIV data-vcomp="free-reward-panel"></DIV>
<DIV class="show-foot"><A class="notebook" href="https://www.jianshu.com/nb/16156802"><I 
class="iconfont ic-search-notebook"></I><SPAN>技术之路</SPAN></A>
<DIV class="copyright" data-original-title="转载请联系作者获得授权，并标注“简书作者”。" data-toggle="tooltip" 
data-html="true">© 著作权归作者所有        </DIV>
<DIV class="modal-wrap" data-report-note=""><A 
id="report-modal">举报文章</A></DIV></DIV><!-- 文章底部作者信息 -->
<DIV class="follow-detail">
<DIV class="info"><A class="avatar" href="https://www.jianshu.com/u/86696f09d988"><IMG 
alt="96" src="如何实现一个简单的RPC%20-%20简书_files/1a8f408c-896b-464d-a417-4cea04f9c2e9.png">
</A>
<DIV data-author-follow-button="" 
props-data-classes="user-follow-button-footer"></DIV><A class="title" href="https://www.jianshu.com/u/86696f09d988">柳树之</A><IMG 
class="badge-icon" title="程序员优秀作者" alt="595a1b60 08f6 4beb 998f 2bf55e230555" 
src="如何实现一个简单的RPC%20-%20简书_files/595a1b60-08f6-4beb-998f-2bf55e230555" 
data-toggle="tooltip"></DIV>
<DIV class="signature">用简单的语言，分享心得和感受。 个人公众号 =&gt; Bridge4You个人博客 =&gt; 
http://bridgeforyou.cn知乎 =&gt; 
https://www.zhihu.com/people/hong-ze-yang/activities</DIV></DIV>
<DIV class="meta-bottom">
<DIV class="btn like-group"></DIV>
<DIV class="share-group"><A class="share-circle" data-original-title="分享到微信" 
data-toggle="tooltip" data-action="weixin-share"><I 
class="iconfont ic-wechat"></I></A><A class="share-circle" href="javascript:void((function(s,d,e,r,l,p,t,z,c){var%20f='http://v.t.sina.com.cn/share/share.php?appkey=1881139527',u=z||d.location,p=['&amp;url=',e(u),'&amp;title=',e(t||d.title),'&amp;source=',e(r),'&amp;sourceUrl=',e(l),'&amp;content=',c||'gb2312','&amp;pic=',e(p||'')].join('');function%20a(){if(!window.open([f,p].join(''),'mb',['toolbar=0,status=0,resizable=1,width=440,height=430,left=',(s.width-440)/2,',top=',(s.height-430)/2].join('')))u.href=[f,p].join('');};if(/Firefox/.test(navigator.userAgent))setTimeout(a,0);else%20a();})(screen,document,encodeURIComponent,'','','', '推荐 柳树之 的文章《如何实现一个简单的RPC》（ 分享自 @简书 ）','https://www.jianshu.com/p/5b90a4e70783?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=reader_share&amp;utm_source=weibo','页面编码gb2312|utf-8默认gb2312'));" 
data-original-title="分享到微博" data-toggle="tooltip" data-action="weibo-share"><I 
class="iconfont ic-weibo"></I></A><A id="longshare" class="share-circle" target="_blank" 
data-toggle="tooltip">
<DIV id="qrcode" class="qrcode"><IMG alt="Download index side qrcode" src="如何实现一个简单的RPC%20-%20简书_files/download-index-side-qrcode-cb13fc9106a478795f8d10f9f632fccf.png">
<P>下载app生成长微博图片</P></DIV><I class="iconfont ic-picture"></I></A><A class="share-circle more-share" 
tabIndex="0" href="javascript:void(0);" data-toggle="popover" data-html="true" 
data-content="&#10;          <ul class=&quot;share-list&quot;>&#10;            <li><a href=&quot;javascript:void(function(){var d=document,e=encodeURIComponent,r='http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?url='+e('https://www.jianshu.com/p/5b90a4e70783?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=reader_share&amp;utm_source=qzone')+'&amp;title='+e('推荐 柳树之 的文章《如何实现一个简单的RPC》'),x=function(){if(!window.open(r,'qzone','toolbar=0,resizable=1,scrollbars=yes,status=1,width=600,height=600'))location.href=r};if(/Firefox/.test(navigator.userAgent)){setTimeout(x,0)}else{x()}})();&quot;><i class=&quot;social-icon-sprite social-icon-zone&quot;></i><span>分享到QQ空间</span></a></li>&#10;            <li><a href=&quot;javascript:void(function(){var d=document,e=encodeURIComponent,r='https://twitter.com/share?url='+e('https://www.jianshu.com/p/5b90a4e70783?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=reader_share&amp;utm_source=twitter')+'&amp;text='+e('推荐 柳树之 的文章《如何实现一个简单的RPC》（ 分享自 @jianshucom ）')+'&amp;related='+e('jianshucom'),x=function(){if(!window.open(r,'twitter','toolbar=0,resizable=1,scrollbars=yes,status=1,width=600,height=600'))location.href=r};if(/Firefox/.test(navigator.userAgent)){setTimeout(x,0)}else{x()}})();&quot;><i class=&quot;social-icon-sprite social-icon-twitter&quot;></i><span>分享到Twitter</span></a></li>&#10;            <li><a href=&quot;javascript:void(function(){var d=document,e=encodeURIComponent,r='https://www.facebook.com/dialog/share?app_id=483126645039390&amp;display=popup&amp;href=https://www.jianshu.com/p/5b90a4e70783?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=reader_share&amp;utm_source=facebook',x=function(){if(!window.open(r,'facebook','toolbar=0,resizable=1,scrollbars=yes,status=1,width=450,height=330'))location.href=r};if(/Firefox/.test(navigator.userAgent)){setTimeout(x,0)}else{x()}})();&quot;><i class=&quot;social-icon-sprite social-icon-facebook&quot;></i><span>分享到Facebook</span></a></li>&#10;            <li><a href=&quot;javascript:void(function(){var d=document,e=encodeURIComponent,r='https://plus.google.com/share?url='+e('https://www.jianshu.com/p/5b90a4e70783?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=reader_share&amp;utm_source=google_plus'),x=function(){if(!window.open(r,'google_plus','toolbar=0,resizable=1,scrollbars=yes,status=1,width=450,height=330'))location.href=r};if(/Firefox/.test(navigator.userAgent)){setTimeout(x,0)}else{x()}})();&quot;><i class=&quot;social-icon-sprite social-icon-google&quot;></i><span>分享到Google+</span></a></li>&#10;            <li><a href=&quot;javascript:void(function(){var d=document,e=encodeURIComponent,s1=window.getSelection,s2=d.getSelection,s3=d.selection,s=s1?s1():s2?s2():s3?s3.createRange().text:'',r='http://www.douban.com/recommend/?url='+e('https://www.jianshu.com/p/5b90a4e70783?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=reader_share&amp;utm_source=douban')+'&amp;title='+e('如何实现一个简单的RPC')+'&amp;sel='+e(s)+'&amp;v=1',x=function(){if(!window.open(r,'douban','toolbar=0,resizable=1,scrollbars=yes,status=1,width=450,height=330'))location.href=r+'&amp;r=1'};if(/Firefox/.test(navigator.userAgent)){setTimeout(x,0)}else{x()}})()&quot;><i class=&quot;social-icon-sprite social-icon-douban&quot;></i><span>分享到豆瓣</span></a></li>&#10;          </ul>&#10;        " 
data-trigger="focus" data-placement="top">更多分享</A></DIV></DIV><A id="web-note-ad-1" 
href="https://www.jianshu.com/apps/redirect?utm_source=note-bottom-click" 
target="_blank"><IMG alt="Web note ad 1" src="如何实现一个简单的RPC%20-%20简书_files/web-note-ad-1-c2e1746859dbf03abe49248893c9bea4.png"></A><!--
    <div id="note-comment-above-ad-container">
      <span id="youdao-comment-ad" class="ad-badge">广告</span>
    </div>
    -->
<DIV id="vue_comment"></DIV></DIV>
<DIV class="vue-side-tool" props-data-props-show-qr-code="0"></DIV></DIV>
<DIV class="note-bottom">
<DIV class="js-included-collections"></DIV>
<DIV data-vcomp="recommended-notes" data-note-id="27711273" 
data-lazy="1.5"></DIV><!-- 相关文章 --><!-- 未登录用户 -->
<DIV class="seo-recommended-notes">
<DIV class="note have-img"><A class="cover" href="https://www.jianshu.com/p/5a3e7be3d076?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank"><IMG alt="240" src="如何实现一个简单的RPC%20-%20简书_files/7240015-9bf6c5db0acc26b9.jpg">
</A><A class="title" href="https://www.jianshu.com/p/5a3e7be3d076?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank">架构师之路-在Dubbo中开发REST风格的远程调用</A>
<P class="description">概述 dubbo支持多种远程调用方式，例如dubbo RPC（二进制序列化 + tcp协议）、http 
invoker（二进制序列化 + http协议，至少在开源版本没发现对文本序列化的支持）、hessian（二进制序列化 + 
http协议）、WebServices （文本...</P><A class="author" href="https://www.jianshu.com/u/f796a54054d1?utm_campaign=maleskine&amp;utm_content=user&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank">
<DIV class="avatar"><IMG alt="48" src="如何实现一个简单的RPC%20-%20简书_files/26c0bdb2-2375-41b5-9292-5b5256f57114.jpg"></DIV><SPAN 
class="name">CatherinePlans</SPAN></A></DIV>
<DIV class="note have-img"><A class="cover" href="https://www.jianshu.com/p/528e1484e454?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank"><IMG alt="240" src="如何实现一个简单的RPC%20-%20简书_files/4017822-08c7b9b0e3ccd5f2.jpg">
</A><A class="title" href="https://www.jianshu.com/p/528e1484e454?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank">RPC 的概念模型与实现解析</A>
<P 
class="description">转自http://mp.weixin.qq.com/s?__biz=MzAxMTEyOTQ5OQ==&amp;mid=2650610547&amp;idx=1&amp;sn=2cae08dbf62d9a6c2f964ffd440c0077&amp;scene=21#wechat_redirect 
今天分布...</P><A class="author" href="https://www.jianshu.com/u/820ad0f655a5?utm_campaign=maleskine&amp;utm_content=user&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank">
<DIV class="avatar"><IMG alt="48" src="如何实现一个简单的RPC%20-%20简书_files/3dc8fe5d4e74.jpg"></DIV><SPAN 
class="name">文刂德光军</SPAN></A></DIV>
<DIV class="note have-img"><A class="cover" href="https://www.jianshu.com/p/5c4ed8bb56e7?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank"><IMG alt="240" src="如何实现一个简单的RPC%20-%20简书_files/2287474-b0e4a96413f9b1f9.jpg">
</A><A class="title" href="https://www.jianshu.com/p/5c4ed8bb56e7?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank">架构师之路-在Dubbo中开发REST风格的远程调用</A>
<P class="description">概述 dubbo支持多种远程调用方式，例如dubbo RPC（二进制序列化 + tcp协议）、http 
invoker（二进制序列化 + http协议，至少在开源版本没发现对文本序列化的支持）、hessian（二进制序列化 + 
http协议）、WebServices （文本...</P><A class="author" href="https://www.jianshu.com/u/292eea162e0d?utm_campaign=maleskine&amp;utm_content=user&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank">
<DIV class="avatar"><IMG alt="48" src="如何实现一个简单的RPC%20-%20简书_files/12-aeeea4bedf10f2a12c0d50d626951489.jpg"></DIV><SPAN 
class="name">小红牛</SPAN></A></DIV>
<DIV class="note have-img"><A class="cover" href="https://www.jianshu.com/p/86ace76f863f?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank"><IMG alt="240" src="如何实现一个简单的RPC%20-%20简书_files/1131767-10ab890219ea9127.jpg">
</A><A class="title" href="https://www.jianshu.com/p/86ace76f863f?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank">RPC 的概念模型与实现解析</A>
<P class="description">今天分布式应用、云计算、微服务大行其道，作为其技术基石之一的 RPC 你了解多少？一篇 RPC 
的技术总结文章，数了下 5k+ 字，略长，可能也不适合休闲的碎片化时间阅读，可以先收藏抽空再细读:) 全文目录如下： 定义 起源 目标 分类 结构模型拆解组件 
实现导出导入协议编...</P><A class="author" href="https://www.jianshu.com/u/50355ce4a05b?utm_campaign=maleskine&amp;utm_content=user&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank">
<DIV class="avatar"><IMG alt="48" src="如何实现一个简单的RPC%20-%20简书_files/80f362250f3f.jpg"></DIV><SPAN 
class="name">mindwind</SPAN></A></DIV>
<DIV class="note have-img"><A class="cover" href="https://www.jianshu.com/p/4d2921ee9af7?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank"><IMG alt="240" src="如何实现一个简单的RPC%20-%20简书_files/6315247-37ef14e635d1b86a.jpg">
</A><A class="title" href="https://www.jianshu.com/p/4d2921ee9af7?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank">国内信中医的人有多少？</A>
<P class="description"></P><A class="author" href="https://www.jianshu.com/u/51f1100c8724?utm_campaign=maleskine&amp;utm_content=user&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank">
<DIV class="avatar"><IMG alt="48" src="如何实现一个简单的RPC%20-%20简书_files/957d058b-196d-410c-a218-2e3dac61d8f1.jpg"></DIV><SPAN 
class="name">大帅拳霸</SPAN></A></DIV>
<DIV class="note have-img"><A class="cover" href="https://www.jianshu.com/p/ff59781653f2?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank"><IMG alt="240" src="如何实现一个简单的RPC%20-%20简书_files/5972794-9b3285c29ad4d9f9.jpg">
</A><A class="title" href="https://www.jianshu.com/p/ff59781653f2?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank">付爱宝特种兵第九天成长日记</A>
<P 
class="description">每天时间充分感觉完全不够用，天天时间太紧了，每一天都恨不得一天当两天过，感恩付爱宝给我们创立此次特种兵训练，同时也感恩系统为我们的新代理不断创建新兵特训营，让我们每一个人都可以不同的成长，想要多大的成就就要付出多少努力，这句话一点都不差，责任，努力，坚持，我们一定会更好！感...</P><A 
class="author" href="https://www.jianshu.com/u/9b05f5b9bca7?utm_campaign=maleskine&amp;utm_content=user&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank">
<DIV class="avatar"><IMG alt="48" src="如何实现一个简单的RPC%20-%20简书_files/02647d2b-28c9-4143-96b4-62737adce4b5.jpg"></DIV><SPAN 
class="name">艾哲宇</SPAN></A></DIV>
<DIV class="note have-img"><A class="cover" href="https://www.jianshu.com/p/1609cc744c54?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank"><IMG alt="240" src="如何实现一个简单的RPC%20-%20简书_files/4904557-9b27af5a41db5b8e.jpg">
</A><A class="title" href="https://www.jianshu.com/p/1609cc744c54?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank">媒体眼中的枣庄 | 山东省滕州市畜牧业联合体的调查（1989年）</A>
<P class="description">《人民日报》1989年2月5日 第2版 产供销一体化的有益尝试 ——山东省滕州市畜牧业联合体的调查 
1981年开始组建的滕州市畜牧业产供销联合体，是在国家与农民之间的一种中间性服务组织。它囊括了不同所有制形式，不同功能的849家畜牧企事业单位，下连全市5个畜禽饲养基地，55...</P><A 
class="author" href="https://www.jianshu.com/u/579b8517a3e3?utm_campaign=maleskine&amp;utm_content=user&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank">
<DIV class="avatar"><IMG alt="48" src="如何实现一个简单的RPC%20-%20简书_files/adedcb47-bbc1-42ba-8a5b-2b922567f55b.jpg"></DIV><SPAN 
class="name">枣庄档案</SPAN></A></DIV>
<DIV class="note have-img"><A class="cover" href="https://www.jianshu.com/p/1957252f36e9?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank"><IMG alt="240" src="如何实现一个简单的RPC%20-%20简书_files/3146505-ed0bf282fc3f65cf.jpg">
</A><A class="title" href="https://www.jianshu.com/p/1957252f36e9?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank">2017年高考志愿大讲堂在山东大学启动</A>
<P 
class="description">高考结束后，考生与家长却要在有限的十天内匆忙在2000多所院校与500多个专业之间挑选一所大学和一个专业，既没有太多的时间了解这么多的大学，又没有时间去剖析自己适合考什么专业，而且对于高考录取程序也知之甚少。但填报志愿填报的科学性与合理性直接决定着是否能够顺利地被理想的大学...</P><A 
class="author" href="https://www.jianshu.com/u/839fd0887b17?utm_campaign=maleskine&amp;utm_content=user&amp;utm_medium=seo_notes&amp;utm_source=recommendation" 
target="_blank">
<DIV class="avatar"><IMG alt="48" src="如何实现一个简单的RPC%20-%20简书_files/181db325-9621-4b76-b916-1ebb13c80d2c.png"></DIV><SPAN 
class="name">老满说高考</SPAN></A></DIV></DIV></DIV>
<SCRIPT type="application/json" data-name="page-data">{"user_signed_in":false,"locale":"zh-CN","os":"windows","read_mode":"day","read_font":"font2","note_show":{"is_author":false,"is_following_author":false,"is_liked_note":false,"follow_state":0,"uuid":"f5e494d2-6f54-46dd-bb35-ffba544f2612"},"note":{"id":27711273,"slug":"5b90a4e70783","user_id":7143349,"notebook_id":16156802,"commentable":true,"likes_count":382,"views_count":52033,"public_wordage":2756,"comments_count":28,"featured_comments_count":2,"total_rewards_count":0,"is_author":false,"paid_type":"free","paid":false,"paid_content_accessible":false,"author":{"nickname":"柳树之","total_wordage":150374,"followers_count":18994,"total_likes_count":4306}}}</SCRIPT>

<SCRIPT src="如何实现一个简单的RPC%20-%20简书_files/babel-polyfill-6cd2d6b53fe3184b71cc.js" crossorigin="anonymous"></SCRIPT>

<SCRIPT src="如何实现一个简单的RPC%20-%20简书_files/web-base-ff73d517fc8d3c3429e6.js" crossorigin="anonymous"></SCRIPT>

<SCRIPT src="如何实现一个简单的RPC%20-%20简书_files/web-5a55490af7df504104e6.js" crossorigin="anonymous"></SCRIPT>

<SCRIPT src="如何实现一个简单的RPC%20-%20简书_files/entry-82e44627b2e2d73431d6.js" crossorigin="anonymous"></SCRIPT>

<SCRIPT>
  (function(){
      var bp = document.createElement('script');
      var curProtocol = window.location.protocol.split(':')[0];
      if (curProtocol === 'https') {
          bp.src = 'https://zz.bdstatic.com/linksubmit/push.js';
      }
      else {
          bp.src = 'http://push.zhanzhang.baidu.com/push.js';
      }
      var s = document.getElementsByTagName("script")[0];
      s.parentNode.insertBefore(bp, s);
  })();
</SCRIPT>
</BODY></HTML>
